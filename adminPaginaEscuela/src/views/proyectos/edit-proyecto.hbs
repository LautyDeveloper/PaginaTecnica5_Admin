<style>
    h3{
        color: orangered;
        font-size: 1.4rem;
        font-weight: 700;
        font-family: Arial, Helvetica, sans-serif   ;
    }
    .container{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 500px;
        height: 700px;
        background-color: rgb(0, 0, 79);
        border-radius: 20px;
    }
    form{
        width: 80%;
        height: 90%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
    }
    form button{
        background-color: orangered;
        width: 90%;
        height: 30px;
        border-radius: 20px;
        border: none;
        outline: none;
        color: white;
        font-size: 1.2rem;
        font-weight: 700;
    }

    form div{
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        width: 90%;
    }
    form div label{
        color: orangered;
        font-size: 1.2rem;
        font-weight: 700;
        font-family: Arial, Helvetica, sans-serif   ;
    }

    form div input, textarea, select{
        width: 100%;
        height: 30px;
        border: none;
        outline: none;
        padding-left: 10px;
        resize: none;
        background-color: rgb(2, 31, 194);
        color: white;
        font-weight: 600;
    }
    form div input::placeholder, textarea::placeholder{
        color: white;
    }
    
    form div textarea{
        height: 160px;
    }

    .archivo{
      color: white;
      font-family: Arial, Helvetica, sans-serif;
      font-size: 1.2rem;
    }
    .archivo a{
      color: white;
    font-weight: 700;
    }

  
    /* Estilos del modal */
    .modal {
        display: none; /* Oculto por defecto */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
    }
    .modal-content {
        background-color: #fefefe;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 400px;
        text-align: center;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        height: 200px;
    }
    .modal-footer button {
        padding: 8px 16px;
        font-size: 14px;
        color: #fff;
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .modal-footer button:hover {
        background-color: #0056b3;
    }
    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

</style>
<div class="container">
  <h3 class="text-uppercase">EDITANDO UN PROYECTO</h3>
  <form action="/edit-proyecto/{{proyecto.idProyecto}}" method="POST" enctype="multipart/form-data">
    <div>
      <label for="proyecto">Proyecto</label>
      <input
        type="text"
        name="proyectoNombre"
        id="proyectoNombre"
        value="{{proyecto.proyectoNombre}}"
        autofocus
        required
      />
    </div>
    
    <div>
      <label for="descripcionProyecto">Descripcion</label>
      <textarea
        name="descripcionProyecto"
        id="descripcionProyecto"
        required
      >{{proyecto.descripcionProyecto}}</textarea>
    </div>

    <div>
      <label for="carrera">Carrera</label>
      <select name="carrera" id="carrera">
        <option value="Programacion">Programacion</option>
        <option value="Informatica">Informatica</option>
        <option value="Maestro Mayor de Obras">Maestro Mayor de Obras</option>
        <option value="Basico">Basico</option>
      </select>
    </div>
  <div>
<label for="srcVideo">Cursos</label>
      <input
        type="text"
        name="cursos"
        id="cursos"
        value="{{proyecto.cursos}}"
        required
      />
    
  </div>
    
    <div>
      <label for="srcVideo">Video</label>
      <input
        type="text"
        name="srcVideo"
        id="srcVideo"
        value="{{proyecto.srcVideo}}"
        required
        placeholder="Link del Video"
      />
    </div>

    {{#if proyecto.archivoUrl}}
      <div>
        <p class="archivo">Archivo actual: <a href="/uploads/{{proyecto.archivoUrl}}" target="_blank">{{proyecto.archivoUrl}}</a></p>
      </div>
    {{/if}}

    <div>
      <label for="archivoUrl">Subir nuevo archivo</label>
      <input type="file" name="archivoUrl" id="archivoUrl" />
    </div>
    
    <button id="updateButton"> Actualizar </button>
  </form>
      <div class="modal" id="messageModal">
        <div class="modal-content">
            <h3 id="modalTitle">Mensaje</h3>
            <p id="modalBody"></p>
            <div class="modal-footer">
                <button id="closeModal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const updateButton = document.getElementById("updateButton");
  const modal = document.getElementById("messageModal");
  const closeModal = document.getElementById("closeModal");
  const modalTitle = document.getElementById("modalTitle");
  const modalBody = document.getElementById("modalBody");
  const form = document.querySelector("form");

  form.addEventListener("submit", async (e) => {
    e.preventDefault(); // Prevenir recarga de la página

    // Crear un FormData para enviar los archivos y los campos
    const formData = new FormData(form);

    // Crear el objeto proyectoData con los valores del formulario
    const proyectoData = {
      proyectoNombre: formData.get("proyectoNombre"),
      descripcionProyecto: formData.get("descripcionProyecto"),
      carrera: formData.get("carrera"),
      cursos: formData.get("cursos"),
      srcVideo: formData.get("srcVideo"),
      archivoUrl: formData.get("archivoUrl")  // Aquí va el archivo si existe
    };

    try {
      // Realizamos la solicitud con los datos en JSON
      const response = await fetch(form.action, {
        method: "POST",
        body: JSON.stringify(proyectoData),
        headers: { "Content-Type": "application/json" }
      });

      if (response.ok) {
        modalTitle.textContent = "Éxito";
        modalBody.textContent = "El proyecto se actualizó correctamente.";
        modal.style.display = "flex";

        setTimeout(() => {
          window.location.href = "/proyectos"; // Redirigir después de 2 segundos
        }, 2000);
      } else {
        const error = await response.json();
        modalTitle.textContent = "Error";
        modalBody.textContent = error.message || "Ocurrió un problema al actualizar.";
        modal.style.display = "flex";
      }
    } catch (err) {
      console.error(err);
      modalTitle.textContent = "Error";
      modalBody.textContent = "Hubo un problema con la conexión.";
      modal.style.display = "flex";
    }
  });

  closeModal.addEventListener("click", () => {
    modal.style.display = "none";
    window.location.href = "/proyectos";
  });
});


</script>