<style>
   .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    border-radius: 20px;
    width: 80%;
    max-width: 400px;
    height: 150px;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
  }
  #modalMessage{
    font-size: 1.2rem;
    font-weight: 600;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  .hidden {
    display: none;
  }
  .modal-footer {
  text-align: center;
}

.modal-footer button {
  padding: 8px 16px;
  font-size: 14px;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  font-size: 1.1rem;
  cursor: pointer;
}

.modal-footer button:hover {
  background-color: #0056b3;
}
</style>
<div class="container-add-proyecto">
  <form action="/add-proyecto" method="POST" enctype="multipart/form-data" id="add-proyecto-form">
    <div>
      <label for="proyectoNombre">Nombre del proyecto</label>
      <input
        type="text"
        name="proyectoNombre"
        id="proyectoNombre"
        placeholder="Nombre de su proyecto"
        autofocus
        required
      />
    </div>

    <div>
      <label for="descripcionProyecto">Descripcion del proyecto</label>
      <textarea
        name="descripcionProyecto"
        id="descripcionProyecto"
        placeholder="Describa su proyecto"
        required
      ></textarea>
    </div>

    <div>
      <label for="carrera">Carrera</label>
      <select name="carrera" id="carrera">
        <option value="Programación">Programación</option>
        <option value="Informática">Informática</option>
        <option value="Maestro Mayor de Obras">Maestro Mayor de Obras</option>
        <option value="Básico">Básico</option>
      </select>
    </div>

    <div>
      <label for="carrera">Cursos</label>
      <input
        type="text"
        name="cursos"
        id="cursos"
        placeholder="Carrera del proyecto"
        required
      />
    </div>
    <div>
      <label for="carrera">Src Video de Youtube</label>
      <input
        type="text"
        name="srcVideo"
        id="srcVideo"
        placeholder="SRC del video de Youtube"
        required
      />
    </div>

    <div>
      <label for="archivoUrl">Subir archivo (Word o PDF)</label>
      <input type="file" name="archivoUrl" id="archivoUrl" accept=".pdf,.doc,.docx" />
    </div>

    <button id="createProjectBtn"> Crear proyecto </button>
  </form>
  <div id="modal" class="modal hidden">
  <div class="modal-content">
    <p id="modalMessage"></p>
      <div class="modal-footer">
    <button id="closeModalButton">Cerrar</button>
  </div>
  </div>

</div>
</div>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("add-proyecto-form");
  const createButton = document.getElementById("createProjectBtn");
  const modal = document.getElementById("modal");
  const modalMessage = document.getElementById("modalMessage");
  
  const closeModalButton = document.getElementById("closeModalButton");
  closeModalButton.addEventListener("click", () => {
    window.location.href = "/proyectos";
  });

  // Validación para el campo Cursos
  function validateCursos(cursos) {
    // Asegurarse de que no esté vacío
    if (!cursos || cursos.trim() === "") {
      return "El campo 'Cursos' no puede estar vacío.";
    }

    return null;
  }

  createButton.addEventListener("click", async (e) => {
    e.preventDefault();

    // Crear datos del formulario para enviar
    const formData = new FormData(form);
    const proyectoNombre = formData.get("proyectoNombre");
    const descripcionProyecto = formData.get("descripcionProyecto");
    const cursos = formData.get("cursos");
    const srcVideo = formData.get("srcVideo");

    // Validación de campos antes de enviar
    let validationError = validateCursos(cursos);
    if (validationError) {
      modalMessage.textContent = validationError;
      modal.style.display = "block";
      return;
    }

    try {
      // Mostrar el modal con mensaje de "Creando..."
      modalMessage.textContent = "Creando el proyecto, por favor espere...";
      modal.classList.remove("hidden");
      modal.style.display = "block";

      // Enviar datos al servidor
      const response = await fetch("/add-proyecto", {
        method: "POST",
        body: formData,
      });

      if (response.ok) {
        modalMessage.textContent = "¡Proyecto creado exitosamente!";
        setTimeout(() => {
          window.location.href = "/proyectos";
        }, 4000); // Redirigir después de 4 segundos
      } else {
        const error = await response.json();
        modalMessage.textContent = `Error: ${error.message}`;
      }
    } catch (err) {
      modalMessage.textContent = "Ocurrió un error al crear el proyecto.";
    }
  });

  // Cerrar el modal al hacer clic en la 'X'
  closeModalButton.addEventListener("click", () => {
    modal.style.display = "none";
    window.location.href = "/proyectos";
  });
});

</script>