<style>
    * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: sans-serif;
}

body {
  min-height: 90vh;
  display: grid;
  text-align: center;
  background-color: whitesmoke;
}

nav{
    background-color: #0c2795;
    width: 100vw;
    height: 100px;
    display: grid;
    color: white;
    font-size: 1.4rem;
    font-family: Arial, Helvetica, sans-serif;
}
nav a{
    color: white;
    text-decoration: none;
    background-color: orangered;
    padding: 10px 10px;
    border-radius: 30px;
}
nav a:hover{
    background-color: #ae2c00;
}
nav div{
    display: flex;
    justify-content: space-around;
    align-items: center;
}
nav div div{
    display: flex;
    gap: 10px;
}

nav div h1{
    font-size: 25px;
    display: none;
}

@media(min-width: 600px){
    nav div a{
        padding: 15px 20px;
    }
    
    nav div h1{
        font-size: 35px;
        display: block;
    }

    .container form{
        width: 600px;
        height: auto;
        padding: 50px;
    }

    .container form div textarea{
        height: 220px;
    }
}

    h3{
        color: orangered;
        font-size: 1.4rem;
        font-weight: 700;
        font-family: Arial, Helvetica, sans-serif   ;
        margin-top: 30px;
        margin-bottom: 30px;
    }
    .container{
        display: grid;
        place-items: center;
    }
    form{
        display: grid;
        width: 95%;
        background-color: rgb(0, 0, 79);
        border-radius: 30px;
        padding: 30px;
        gap: 30px;
    }
    form button{
        background-color: orangered;
        border-radius: 20px;
        border: none;
        outline: none;
        color: white;
        font-size: 1.2rem;
        font-weight: 700;
        padding: 15px 10px;
        height: 50px;
    }

    form button:hover{
        background-color: #ae2c00;
    }

    form div{
        display: grid;
        gap: 20px;
    }
    form div label{
        color: orangered;
        font-size: 1.3rem;
        font-weight: 700;
        font-family: Arial, Helvetica, sans-serif   ;
        text-align: left;
    }

    form div input, textarea{
        width: 100%;
        border: none;
        outline: none;
        border-radius: 30px;
        padding-left: 10px;
        padding: 20px 10px;
        resize: none;
        background-color: rgb(2, 31, 194);
        color: white;
        font-weight: 600;
    }

    form div textarea{
        height: 150px;
    }

    form div input::placeholder, textarea::placeholder{
        color: white;
    }

    form div .corta{
        height: 50px;
    }
    
    form div .larga{
        height: 300px;
    }

        /* Estilos del modal */
    .modal {
        display: none; /* Oculto por defecto */
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        justify-content: center;
        align-items: center;
    }
    .modal-content {
        background-color: #fefefe;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 400px;
        text-align: center;
        border-radius: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
        align-items: center;
        height: 200px;
    }
    .modal-content h3{
      margin: 0;
      padding: 0;
    }
    .modal-footer button {
        padding: 8px 16px;
        font-size: 14px;
        color: #fff;
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
    .modal-footer button:hover {
        background-color: #0056b3;
    }
    .close-button {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }

</style>
<h3 class="text-uppercase">EDITANDO UNA NOTICIA PARA PROFESORES</h3>
<div class="container">
  <form action="/edit-noticia-profe/{{noticiasProfes.idNoticiaProfe}}" method="POST">
  <div>
  <label for="nombreNoticiaProfe">Nombre de su noticia para profesores</label>
  <input
    type="text"
    name="nombreNoticiaProfe"
    id="nombreNoticiaProfe"
    value="{{noticiasProfes.nombreNoticiaProfe}}"
    autofocus
    required
  />
  </div>
  <div>
  <label for="descripcionNoticiaProfe">Descripción de la noticia para profesores</label>
  <textarea
    name="descripcionNoticiaProfe"
    id="descripcionNoticiaProfe"
    required
  >{{noticiasProfes.descripcionNoticiaProfe}}</textarea>

  </div>

  <button id="updateButton"> Actualizar </button>

</form>
</div>
      <div class="modal" id="messageModal">
        <div class="modal-content">
            <h3 id="modalTitle">Mensaje</h3>
            <p id="modalBody"></p>
            <div class="modal-footer">
                <button id="closeModal">Cerrar</button>
            </div>
        </div>
    </div>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const updateButton = document.getElementById("updateButton");
  const modal = document.getElementById("messageModal");
  const closeModal = document.getElementById("closeModal");
  const modalTitle = document.getElementById("modalTitle");
  const modalBody = document.getElementById("modalBody");
  const form = document.querySelector("form");

  form.addEventListener("submit", async (e) => {
    e.preventDefault(); // Prevenir recarga de la página

    const formData = new FormData(form);
    const data = {
      nombreNoticiaProfe: formData.get("nombreNoticiaProfe"),
      descripcionNoticiaProfe: formData.get("descripcionNoticiaProfe"),
    };

    // Validaciones en el cliente
    if (
      !data.nombreNoticiaProfe ||
      data.nombreNoticiaProfe.length < 5 ||
      data.nombreNoticiaProfe.length > 50
    ) {
      modalTitle.textContent = "Error";
      modalBody.textContent =
        "El nombre de la noticia debe tener entre 5 y 50 caracteres y solo puede contener letras y espacios.";
      modal.style.display = "flex";
      return;
    }

    if (
      !data.descripcionNoticiaProfe ||
      data.descripcionNoticiaProfe.length < 20 ||
      data.descripcionNoticiaProfe.length > 400
    ) {
      modalTitle.textContent = "Error";
      modalBody.textContent =
        "La descripción debe tener entre 20 y 400 caracteres.";
      modal.style.display = "flex";
      return;
    }

    try {
      const response = await fetch(form.action, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      if (response.ok) {
        modalTitle.textContent = "Éxito";
        modalBody.textContent = "La noticia se actualizó correctamente.";
        modal.style.display = "flex";

        setTimeout(() => {
          window.location.href = "/noticias-profesores";
        }, 2000);
      } else {
        const error = await response.json();
        modalTitle.textContent = "Error";
        modalBody.textContent =
          error.message || "Ocurrió un problema al actualizar.";
        modal.style.display = "flex";
      }
    } catch (err) {
      console.error(err);
      modalTitle.textContent = "Error";
      modalBody.textContent = "Hubo un problema con la conexión.";
      modal.style.display = "flex";
    }
  });

  closeModal.addEventListener("click", () => {
    modal.style.display = "none";
    window.location.href = "/noticias-profesores";
  });
});
</script>